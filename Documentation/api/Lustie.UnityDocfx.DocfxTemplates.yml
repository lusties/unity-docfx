### YamlMime:ManagedReference
items:
- uid: Lustie.UnityDocfx.DocfxTemplates
  commentId: T:Lustie.UnityDocfx.DocfxTemplates
  id: DocfxTemplates
  parent: Lustie.UnityDocfx
  children:
  - Lustie.UnityDocfx.DocfxTemplates.templateLinks
  langs:
  - csharp
  - vb
  name: DocfxTemplates
  nameWithType: DocfxTemplates
  fullName: Lustie.UnityDocfx.DocfxTemplates
  type: Class
  source:
    id: DocfxTemplates
    path: ''
    startLine: 942
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nContains template links for Docfx.\n"
  example: []
  syntax:
    content: public class DocfxTemplates
    content.vb: Public Class DocfxTemplates
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lustie.UnityDocfx.DocfxTemplates.templateLinks
  commentId: F:Lustie.UnityDocfx.DocfxTemplates.templateLinks
  id: templateLinks
  parent: Lustie.UnityDocfx.DocfxTemplates
  langs:
  - csharp
  - vb
  name: templateLinks
  nameWithType: DocfxTemplates.templateLinks
  fullName: Lustie.UnityDocfx.DocfxTemplates.templateLinks
  type: Field
  source:
    id: templateLinks
    path: ''
    startLine: 947
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nList of the template links.\n"
  example: []
  syntax:
    content: public static readonly (string title, string url)[] templateLinks
    return:
      type: System.ValueTuple{System.String,System.String}[]
    content.vb: Public Shared ReadOnly templateLinks As (title As String, url As String)()
references:
- uid: Lustie.UnityDocfx
  commentId: N:Lustie.UnityDocfx
  name: Lustie.UnityDocfx
  nameWithType: Lustie.UnityDocfx
  fullName: Lustie.UnityDocfx
  spec.csharp:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
  spec.vb:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueTuple{System.String,System.String}[]
  isExternal: true
  name: (string title, string url)[]
  nameWithType: (string title, string url)[]
  fullName: (string title, string url)[]
  nameWithType.vb: (title As String, url As String)()
  fullName.vb: (title As String, url As String)()
  name.vb: (title As String, url As String)()
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.title
    name: title
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.url
    name: url
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.title
    name: title
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.url
    name: url
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
  - name: (
  - name: )
