### YamlMime:ManagedReference
items:
- uid: Lustie.UnityDocfx.DocfxData
  commentId: T:Lustie.UnityDocfx.DocfxData
  id: DocfxData
  parent: Lustie.UnityDocfx
  children:
  - Lustie.UnityDocfx.DocfxData._appFooter
  - Lustie.UnityDocfx.DocfxData._appTitle
  - Lustie.UnityDocfx.DocfxData._enableSearch
  - Lustie.UnityDocfx.DocfxData.baseUrl
  - Lustie.UnityDocfx.DocfxData.dest
  - Lustie.UnityDocfx.DocfxData.exclude
  - Lustie.UnityDocfx.DocfxData.src
  langs:
  - csharp
  - vb
  name: DocfxData
  nameWithType: DocfxData
  fullName: Lustie.UnityDocfx.DocfxData
  type: Class
  source:
    id: DocfxData
    path: ''
    startLine: 5
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: >-
      [Serializable]

      public class DocfxData
    content.vb: >-
      <Serializable>

      Public Class DocfxData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Lustie.UnityDocfx.DocfxData.src
  commentId: F:Lustie.UnityDocfx.DocfxData.src
  id: src
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: src
  nameWithType: DocfxData.src
  fullName: Lustie.UnityDocfx.DocfxData.src
  type: Field
  source:
    id: src
    path: ''
    startLine: 11
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nmetadata.src.files\n"
  example: []
  syntax:
    content: public List<string> src
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public src As List(Of String)
- uid: Lustie.UnityDocfx.DocfxData.exclude
  commentId: F:Lustie.UnityDocfx.DocfxData.exclude
  id: exclude
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: exclude
  nameWithType: DocfxData.exclude
  fullName: Lustie.UnityDocfx.DocfxData.exclude
  type: Field
  source:
    id: exclude
    path: ''
    startLine: 16
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nmetadata.src.exclude\n"
  example: []
  syntax:
    content: public List<string> exclude
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public exclude As List(Of String)
- uid: Lustie.UnityDocfx.DocfxData._appTitle
  commentId: F:Lustie.UnityDocfx.DocfxData._appTitle
  id: _appTitle
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: _appTitle
  nameWithType: DocfxData._appTitle
  fullName: Lustie.UnityDocfx.DocfxData._appTitle
  type: Field
  source:
    id: _appTitle
    path: ''
    startLine: 21
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nbuild.globalMetadata._appTitle\n"
  example: []
  syntax:
    content: public string _appTitle
    return:
      type: System.String
    content.vb: Public _appTitle As String
- uid: Lustie.UnityDocfx.DocfxData._appFooter
  commentId: F:Lustie.UnityDocfx.DocfxData._appFooter
  id: _appFooter
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: _appFooter
  nameWithType: DocfxData._appFooter
  fullName: Lustie.UnityDocfx.DocfxData._appFooter
  type: Field
  source:
    id: _appFooter
    path: ''
    startLine: 26
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nbuild.globalMetadata._appFooter\n"
  example: []
  syntax:
    content: public string _appFooter
    return:
      type: System.String
    content.vb: Public _appFooter As String
- uid: Lustie.UnityDocfx.DocfxData._enableSearch
  commentId: F:Lustie.UnityDocfx.DocfxData._enableSearch
  id: _enableSearch
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: _enableSearch
  nameWithType: DocfxData._enableSearch
  fullName: Lustie.UnityDocfx.DocfxData._enableSearch
  type: Field
  source:
    id: _enableSearch
    path: ''
    startLine: 31
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nbuild.globalMetadata._enableSearch\n"
  example: []
  syntax:
    content: public bool _enableSearch
    return:
      type: System.Boolean
    content.vb: Public _enableSearch As Boolean
- uid: Lustie.UnityDocfx.DocfxData.baseUrl
  commentId: F:Lustie.UnityDocfx.DocfxData.baseUrl
  id: baseUrl
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: baseUrl
  nameWithType: DocfxData.baseUrl
  fullName: Lustie.UnityDocfx.DocfxData.baseUrl
  type: Field
  source:
    id: baseUrl
    path: ''
    startLine: 36
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nsitemap.baseUrl\n"
  example: []
  syntax:
    content: public string baseUrl
    return:
      type: System.String
    content.vb: Public baseUrl As String
- uid: Lustie.UnityDocfx.DocfxData.dest
  commentId: F:Lustie.UnityDocfx.DocfxData.dest
  id: dest
  parent: Lustie.UnityDocfx.DocfxData
  langs:
  - csharp
  - vb
  name: dest
  nameWithType: DocfxData.dest
  fullName: Lustie.UnityDocfx.DocfxData.dest
  type: Field
  source:
    id: dest
    path: ''
    startLine: 41
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nbuild.dest\n"
  example: []
  syntax:
    content: public string dest
    return:
      type: System.String
    content.vb: Public dest As String
references:
- uid: Lustie.UnityDocfx
  commentId: N:Lustie.UnityDocfx
  name: Lustie.UnityDocfx
  nameWithType: Lustie.UnityDocfx
  fullName: Lustie.UnityDocfx
  spec.csharp:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
  spec.vb:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
