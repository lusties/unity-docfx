### YamlMime:ManagedReference
items:
- uid: Global.LiveServer
  commentId: T:Global.LiveServer
  id: LiveServer
  parent: Global
  children:
  - Global.LiveServer.#ctor(System.String,System.Int32)
  - Global.LiveServer.Dispose
  - Global.LiveServer.GetUrl
  - Global.LiveServer.op_Implicit(LiveServer)~System.Boolean
  - Global.LiveServer.Run
  langs:
  - csharp
  - vb
  name: LiveServer
  nameWithType: LiveServer
  fullName: LiveServer
  type: Class
  source:
    id: LiveServer
    path: ''
    startLine: 644
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class LiveServer : IDisposable'
    content.vb: Public Class LiveServer Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Global.LiveServer.#ctor(System.String,System.Int32)
  commentId: M:Global.LiveServer.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Global.LiveServer
  langs:
  - csharp
  - vb
  name: LiveServer(string, int)
  nameWithType: LiveServer.LiveServer(string, int)
  fullName: LiveServer.LiveServer(string, int)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 652
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public LiveServer(string folderPath, int port)
    parameters:
    - id: folderPath
      type: System.String
    - id: port
      type: System.Int32
    content.vb: Public Sub New(folderPath As String, port As Integer)
  overload: Global.LiveServer.#ctor*
  nameWithType.vb: LiveServer.New(String, Integer)
  fullName.vb: LiveServer.New(String, Integer)
  name.vb: New(String, Integer)
- uid: Global.LiveServer.Run
  commentId: M:Global.LiveServer.Run
  id: Run
  parent: Global.LiveServer
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: LiveServer.Run()
  fullName: LiveServer.Run()
  type: Method
  source:
    id: Run
    path: ''
    startLine: 663
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void Run()
    content.vb: Public Sub Run()
  overload: Global.LiveServer.Run*
- uid: Global.LiveServer.Dispose
  commentId: M:Global.LiveServer.Dispose
  id: Dispose
  parent: Global.LiveServer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: LiveServer.Dispose()
  fullName: LiveServer.Dispose()
  type: Method
  source:
    id: Dispose
    path: ''
    startLine: 754
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Global.LiveServer.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Global.LiveServer.GetUrl
  commentId: M:Global.LiveServer.GetUrl
  id: GetUrl
  parent: Global.LiveServer
  langs:
  - csharp
  - vb
  name: GetUrl()
  nameWithType: LiveServer.GetUrl()
  fullName: LiveServer.GetUrl()
  type: Method
  source:
    id: GetUrl
    path: ''
    startLine: 761
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string GetUrl()
    return:
      type: System.String
    content.vb: Public Function GetUrl() As String
  overload: Global.LiveServer.GetUrl*
- uid: Global.LiveServer.op_Implicit(LiveServer)~System.Boolean
  commentId: M:Global.LiveServer.op_Implicit(LiveServer)~System.Boolean
  id: op_Implicit(LiveServer)~System.Boolean
  parent: Global.LiveServer
  langs:
  - csharp
  - vb
  name: implicit operator bool(LiveServer)
  nameWithType: LiveServer.implicit operator bool(LiveServer)
  fullName: LiveServer.implicit operator bool(LiveServer)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 763
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static implicit operator bool(LiveServer server)
    parameters:
    - id: server
      type: Global.LiveServer
    return:
      type: System.Boolean
    content.vb: Public Shared Widening Operator CType(server As LiveServer) As Boolean
  overload: Global.LiveServer.op_Implicit*
  nameWithType.vb: LiveServer.CType(LiveServer)
  fullName.vb: LiveServer.CType(LiveServer)
  name.vb: CType(LiveServer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.LiveServer.#ctor*
  commentId: Overload:Global.LiveServer.#ctor
  name: LiveServer
  nameWithType: LiveServer.LiveServer
  fullName: LiveServer.LiveServer
  nameWithType.vb: LiveServer.New
  fullName.vb: LiveServer.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.LiveServer.Run*
  commentId: Overload:Global.LiveServer.Run
  name: Run
  nameWithType: LiveServer.Run
  fullName: LiveServer.Run
- uid: Global.LiveServer.Dispose*
  commentId: Overload:Global.LiveServer.Dispose
  name: Dispose
  nameWithType: LiveServer.Dispose
  fullName: LiveServer.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: Global.LiveServer.GetUrl*
  commentId: Overload:Global.LiveServer.GetUrl
  name: GetUrl
  nameWithType: LiveServer.GetUrl
  fullName: LiveServer.GetUrl
- uid: Global.LiveServer.op_Implicit*
  commentId: Overload:Global.LiveServer.op_Implicit
  isExternal: true
  name: implicit operator bool
  nameWithType: LiveServer.implicit operator bool
  fullName: LiveServer.implicit operator bool
  nameWithType.vb: LiveServer.CType
  fullName.vb: LiveServer.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
  - name: " "
  - uid: System.Boolean*
    name: bool
    isExternal: true
- uid: Global.LiveServer
  commentId: T:Global.LiveServer
  name: LiveServer
  nameWithType: LiveServer
  fullName: LiveServer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
