### YamlMime:ManagedReference
items:
- uid: Lustie.UnityDocfx.DocfxTemplatesPath
  commentId: T:Lustie.UnityDocfx.DocfxTemplatesPath
  id: DocfxTemplatesPath
  parent: Lustie.UnityDocfx
  children:
  - Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath
  - Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates(System.String,System.String@)
  langs:
  - csharp
  - vb
  name: DocfxTemplatesPath
  nameWithType: DocfxTemplatesPath
  fullName: Lustie.UnityDocfx.DocfxTemplatesPath
  type: Class
  source:
    id: DocfxTemplatesPath
    path: ''
    startLine: 434
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public class DocfxTemplatesPath
    content.vb: Public Class DocfxTemplatesPath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath
  commentId: M:Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath
  id: CurrentPath
  parent: Lustie.UnityDocfx.DocfxTemplatesPath
  langs:
  - csharp
  - vb
  name: CurrentPath()
  nameWithType: DocfxTemplatesPath.CurrentPath()
  fullName: Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath()
  type: Method
  source:
    id: CurrentPath
    path: ''
    startLine: 440
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nGet current path\n"
  example: []
  syntax:
    content: public static string CurrentPath()
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function CurrentPath() As String
  overload: Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath*
- uid: Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates(System.String,System.String@)
  commentId: M:Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates(System.String,System.String@)
  id: LoadTemplates(System.String,System.String@)
  parent: Lustie.UnityDocfx.DocfxTemplatesPath
  langs:
  - csharp
  - vb
  name: LoadTemplates(string, out string)
  nameWithType: DocfxTemplatesPath.LoadTemplates(string, out string)
  fullName: Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates(string, out string)
  type: Method
  source:
    id: LoadTemplates
    path: ''
    startLine: 446
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public static bool LoadTemplates(string fileName, out string filePath)
    parameters:
    - id: fileName
      type: System.String
    - id: filePath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function LoadTemplates(fileName As String, filePath As String) As Boolean
  overload: Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates*
  nameWithType.vb: DocfxTemplatesPath.LoadTemplates(String, String)
  fullName.vb: Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates(String, String)
  name.vb: LoadTemplates(String, String)
references:
- uid: Lustie.UnityDocfx
  commentId: N:Lustie.UnityDocfx
  name: Lustie.UnityDocfx
  nameWithType: Lustie.UnityDocfx
  fullName: Lustie.UnityDocfx
  spec.csharp:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
  spec.vb:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath*
  commentId: Overload:Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath
  name: CurrentPath
  nameWithType: DocfxTemplatesPath.CurrentPath
  fullName: Lustie.UnityDocfx.DocfxTemplatesPath.CurrentPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates*
  commentId: Overload:Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates
  name: LoadTemplates
  nameWithType: DocfxTemplatesPath.LoadTemplates
  fullName: Lustie.UnityDocfx.DocfxTemplatesPath.LoadTemplates
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
