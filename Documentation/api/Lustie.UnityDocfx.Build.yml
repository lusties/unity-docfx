### YamlMime:ManagedReference
items:
- uid: Lustie.UnityDocfx.Build
  commentId: T:Lustie.UnityDocfx.Build
  id: Build
  parent: Lustie.UnityDocfx
  children:
  - Lustie.UnityDocfx.Build.content
  - Lustie.UnityDocfx.Build.dest
  - Lustie.UnityDocfx.Build.fullDest
  - Lustie.UnityDocfx.Build.globalMetadata
  langs:
  - csharp
  - vb
  name: Build
  nameWithType: Build
  fullName: Lustie.UnityDocfx.Build
  type: Class
  source:
    id: Build
    path: ''
    startLine: 1246
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: >-
      [Serializable]

      public class Build
    content.vb: >-
      <Serializable>

      Public Class Build
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Lustie.UnityDocfx.Build.globalMetadata
  commentId: F:Lustie.UnityDocfx.Build.globalMetadata
  id: globalMetadata
  parent: Lustie.UnityDocfx.Build
  langs:
  - csharp
  - vb
  name: globalMetadata
  nameWithType: Build.globalMetadata
  fullName: Lustie.UnityDocfx.Build.globalMetadata
  type: Field
  source:
    id: globalMetadata
    path: ''
    startLine: 1249
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public GlobalMetadata globalMetadata
    return:
      type: Lustie.UnityDocfx.GlobalMetadata
    content.vb: Public globalMetadata As GlobalMetadata
- uid: Lustie.UnityDocfx.Build.content
  commentId: F:Lustie.UnityDocfx.Build.content
  id: content
  parent: Lustie.UnityDocfx.Build
  langs:
  - csharp
  - vb
  name: content
  nameWithType: Build.content
  fullName: Lustie.UnityDocfx.Build.content
  type: Field
  source:
    id: content
    path: ''
    startLine: 1250
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public List<Content> content
    return:
      type: System.Collections.Generic.List{Lustie.UnityDocfx.Content}
    content.vb: Public content As List(Of Content)
- uid: Lustie.UnityDocfx.Build.dest
  commentId: F:Lustie.UnityDocfx.Build.dest
  id: dest
  parent: Lustie.UnityDocfx.Build
  langs:
  - csharp
  - vb
  name: dest
  nameWithType: Build.dest
  fullName: Lustie.UnityDocfx.Build.dest
  type: Field
  source:
    id: dest
    path: ''
    startLine: 1251
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public string dest
    return:
      type: System.String
    content.vb: Public dest As String
- uid: Lustie.UnityDocfx.Build.fullDest
  commentId: P:Lustie.UnityDocfx.Build.fullDest
  id: fullDest
  parent: Lustie.UnityDocfx.Build
  langs:
  - csharp
  - vb
  name: fullDest
  nameWithType: Build.fullDest
  fullName: Lustie.UnityDocfx.Build.fullDest
  type: Property
  source:
    id: fullDest
    path: ''
    startLine: 1254
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public string fullDest { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property fullDest As String
  overload: Lustie.UnityDocfx.Build.fullDest*
references:
- uid: Lustie.UnityDocfx
  commentId: N:Lustie.UnityDocfx
  name: Lustie.UnityDocfx
  nameWithType: Lustie.UnityDocfx
  fullName: Lustie.UnityDocfx
  spec.csharp:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
  spec.vb:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Lustie.UnityDocfx.GlobalMetadata
  commentId: T:Lustie.UnityDocfx.GlobalMetadata
  parent: Lustie.UnityDocfx
  name: GlobalMetadata
  nameWithType: GlobalMetadata
  fullName: Lustie.UnityDocfx.GlobalMetadata
- uid: System.Collections.Generic.List{Lustie.UnityDocfx.Content}
  commentId: T:System.Collections.Generic.List{Lustie.UnityDocfx.Content}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Content>
  nameWithType: List<Content>
  fullName: System.Collections.Generic.List<Lustie.UnityDocfx.Content>
  nameWithType.vb: List(Of Content)
  fullName.vb: System.Collections.Generic.List(Of Lustie.UnityDocfx.Content)
  name.vb: List(Of Content)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Lustie.UnityDocfx.Content
    name: Content
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Lustie.UnityDocfx.Content
    name: Content
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Lustie.UnityDocfx.Build.fullDest*
  commentId: Overload:Lustie.UnityDocfx.Build.fullDest
  name: fullDest
  nameWithType: Build.fullDest
  fullName: Lustie.UnityDocfx.Build.fullDest
