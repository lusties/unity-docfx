### YamlMime:ManagedReference
items:
- uid: Lustie.UnityDocfx.JObjectExtensions
  commentId: T:Lustie.UnityDocfx.JObjectExtensions
  id: JObjectExtensions
  parent: Lustie.UnityDocfx
  children:
  - Lustie.UnityDocfx.JObjectExtensions.GetJArray(JObject,System.String)
  - Lustie.UnityDocfx.JObjectExtensions.GetJObject(JObject,System.String)
  - Lustie.UnityDocfx.JObjectExtensions.GetJValue(JObject,System.String)
  - Lustie.UnityDocfx.JObjectExtensions.GetValue``1(JObject,System.String)
  - Lustie.UnityDocfx.JObjectExtensions.ReplaceValues(JToken,System.String,System.String)
  langs:
  - csharp
  - vb
  name: JObjectExtensions
  nameWithType: JObjectExtensions
  fullName: Lustie.UnityDocfx.JObjectExtensions
  type: Class
  source:
    id: JObjectExtensions
    path: ''
    startLine: 874
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  syntax:
    content: public static class JObjectExtensions
    content.vb: Public Module JObjectExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Lustie.UnityDocfx.JObjectExtensions.ReplaceValues(JToken,System.String,System.String)
  commentId: M:Lustie.UnityDocfx.JObjectExtensions.ReplaceValues(JToken,System.String,System.String)
  id: ReplaceValues(JToken,System.String,System.String)
  isExtensionMethod: true
  parent: Lustie.UnityDocfx.JObjectExtensions
  langs:
  - csharp
  - vb
  name: ReplaceValues(JToken, string, string)
  nameWithType: JObjectExtensions.ReplaceValues(JToken, string, string)
  fullName: Lustie.UnityDocfx.JObjectExtensions.ReplaceValues(JToken, string, string)
  type: Method
  source:
    id: ReplaceValues
    path: ''
    startLine: 879
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nFunction to recursively replace values\n"
  example: []
  syntax:
    content: public static void ReplaceValues(this JToken token, string target, string replacement)
    parameters:
    - id: token
      type: Global.JToken
    - id: target
      type: System.String
    - id: replacement
      type: System.String
    content.vb: Public Shared Sub ReplaceValues(token As JToken, target As String, replacement As String)
  overload: Lustie.UnityDocfx.JObjectExtensions.ReplaceValues*
  nameWithType.vb: JObjectExtensions.ReplaceValues(JToken, String, String)
  fullName.vb: Lustie.UnityDocfx.JObjectExtensions.ReplaceValues(JToken, String, String)
  name.vb: ReplaceValues(JToken, String, String)
- uid: Lustie.UnityDocfx.JObjectExtensions.GetJObject(JObject,System.String)
  commentId: M:Lustie.UnityDocfx.JObjectExtensions.GetJObject(JObject,System.String)
  id: GetJObject(JObject,System.String)
  isExtensionMethod: true
  parent: Lustie.UnityDocfx.JObjectExtensions
  langs:
  - csharp
  - vb
  name: GetJObject(JObject, string)
  nameWithType: JObjectExtensions.GetJObject(JObject, string)
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetJObject(JObject, string)
  type: Method
  source:
    id: GetJObject
    path: ''
    startLine: 908
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nGet property as JObject\n"
  example: []
  syntax:
    content: public static JObject GetJObject(this JObject jobject, string propertyName)
    parameters:
    - id: jobject
      type: Global.JObject
    - id: propertyName
      type: System.String
    return:
      type: Global.JObject
    content.vb: Public Shared Function GetJObject(jobject As JObject, propertyName As String) As JObject
  overload: Lustie.UnityDocfx.JObjectExtensions.GetJObject*
  nameWithType.vb: JObjectExtensions.GetJObject(JObject, String)
  fullName.vb: Lustie.UnityDocfx.JObjectExtensions.GetJObject(JObject, String)
  name.vb: GetJObject(JObject, String)
- uid: Lustie.UnityDocfx.JObjectExtensions.GetJArray(JObject,System.String)
  commentId: M:Lustie.UnityDocfx.JObjectExtensions.GetJArray(JObject,System.String)
  id: GetJArray(JObject,System.String)
  isExtensionMethod: true
  parent: Lustie.UnityDocfx.JObjectExtensions
  langs:
  - csharp
  - vb
  name: GetJArray(JObject, string)
  nameWithType: JObjectExtensions.GetJArray(JObject, string)
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetJArray(JObject, string)
  type: Method
  source:
    id: GetJArray
    path: ''
    startLine: 916
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nGet property as JArray\n"
  example: []
  syntax:
    content: public static JArray GetJArray(this JObject jobject, string propertyName)
    parameters:
    - id: jobject
      type: Global.JObject
    - id: propertyName
      type: System.String
    return:
      type: Global.JArray
    content.vb: Public Shared Function GetJArray(jobject As JObject, propertyName As String) As JArray
  overload: Lustie.UnityDocfx.JObjectExtensions.GetJArray*
  nameWithType.vb: JObjectExtensions.GetJArray(JObject, String)
  fullName.vb: Lustie.UnityDocfx.JObjectExtensions.GetJArray(JObject, String)
  name.vb: GetJArray(JObject, String)
- uid: Lustie.UnityDocfx.JObjectExtensions.GetJValue(JObject,System.String)
  commentId: M:Lustie.UnityDocfx.JObjectExtensions.GetJValue(JObject,System.String)
  id: GetJValue(JObject,System.String)
  isExtensionMethod: true
  parent: Lustie.UnityDocfx.JObjectExtensions
  langs:
  - csharp
  - vb
  name: GetJValue(JObject, string)
  nameWithType: JObjectExtensions.GetJValue(JObject, string)
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetJValue(JObject, string)
  type: Method
  source:
    id: GetJValue
    path: ''
    startLine: 924
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nGet property as JValue\n"
  example: []
  syntax:
    content: public static JValue GetJValue(this JObject jobject, string propertyName)
    parameters:
    - id: jobject
      type: Global.JObject
    - id: propertyName
      type: System.String
    return:
      type: Global.JValue
    content.vb: Public Shared Function GetJValue(jobject As JObject, propertyName As String) As JValue
  overload: Lustie.UnityDocfx.JObjectExtensions.GetJValue*
  nameWithType.vb: JObjectExtensions.GetJValue(JObject, String)
  fullName.vb: Lustie.UnityDocfx.JObjectExtensions.GetJValue(JObject, String)
  name.vb: GetJValue(JObject, String)
- uid: Lustie.UnityDocfx.JObjectExtensions.GetValue``1(JObject,System.String)
  commentId: M:Lustie.UnityDocfx.JObjectExtensions.GetValue``1(JObject,System.String)
  id: GetValue``1(JObject,System.String)
  isExtensionMethod: true
  parent: Lustie.UnityDocfx.JObjectExtensions
  langs:
  - csharp
  - vb
  name: GetValue<T>(JObject, string)
  nameWithType: JObjectExtensions.GetValue<T>(JObject, string)
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetValue<T>(JObject, string)
  type: Method
  source:
    id: GetValue
    path: ''
    startLine: 932
  assemblies:
  - cs.temp.dll
  namespace: Lustie.UnityDocfx
  summary: "\nGet property value (JToken)\n"
  example: []
  syntax:
    content: 'public static T GetValue<T>(this JObject jobject, string propertyName) where T : JToken'
    parameters:
    - id: jobject
      type: Global.JObject
    - id: propertyName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetValue(Of T As JToken)(jobject As JObject, propertyName As String) As T
  overload: Lustie.UnityDocfx.JObjectExtensions.GetValue*
  nameWithType.vb: JObjectExtensions.GetValue(Of T)(JObject, String)
  fullName.vb: Lustie.UnityDocfx.JObjectExtensions.GetValue(Of T)(JObject, String)
  name.vb: GetValue(Of T)(JObject, String)
references:
- uid: Lustie.UnityDocfx
  commentId: N:Lustie.UnityDocfx
  name: Lustie.UnityDocfx
  nameWithType: Lustie.UnityDocfx
  fullName: Lustie.UnityDocfx
  spec.csharp:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
  spec.vb:
  - uid: Lustie
    name: Lustie
  - name: .
  - uid: Lustie.UnityDocfx
    name: UnityDocfx
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Lustie.UnityDocfx.JObjectExtensions.ReplaceValues*
  commentId: Overload:Lustie.UnityDocfx.JObjectExtensions.ReplaceValues
  name: ReplaceValues
  nameWithType: JObjectExtensions.ReplaceValues
  fullName: Lustie.UnityDocfx.JObjectExtensions.ReplaceValues
- uid: Global.JToken
  commentId: '!:Global.JToken'
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: JToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Lustie.UnityDocfx.JObjectExtensions.GetJObject*
  commentId: Overload:Lustie.UnityDocfx.JObjectExtensions.GetJObject
  name: GetJObject
  nameWithType: JObjectExtensions.GetJObject
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetJObject
- uid: Global.JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Lustie.UnityDocfx.JObjectExtensions.GetJArray*
  commentId: Overload:Lustie.UnityDocfx.JObjectExtensions.GetJArray
  name: GetJArray
  nameWithType: JObjectExtensions.GetJArray
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetJArray
- uid: Global.JArray
  commentId: '!:Global.JArray'
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: JArray
- uid: Lustie.UnityDocfx.JObjectExtensions.GetJValue*
  commentId: Overload:Lustie.UnityDocfx.JObjectExtensions.GetJValue
  name: GetJValue
  nameWithType: JObjectExtensions.GetJValue
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetJValue
- uid: Global.JValue
  commentId: '!:Global.JValue'
  isExternal: true
  name: JValue
  nameWithType: JValue
  fullName: JValue
- uid: Lustie.UnityDocfx.JObjectExtensions.GetValue*
  commentId: Overload:Lustie.UnityDocfx.JObjectExtensions.GetValue
  name: GetValue
  nameWithType: JObjectExtensions.GetValue
  fullName: Lustie.UnityDocfx.JObjectExtensions.GetValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  commentId: '!:T'
  name: T
  nameWithType: T
  fullName: T
